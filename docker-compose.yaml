services:
  ollama:
    image: ollama/ollama
    container_name: ollama
    restart: unless-stopped
    environment:
      - OLLAMA_HOST=0.0.0.0
    volumes:
      - ./ollama-data:/root/.ollama  # Shared volume for models
    ports:
      - "11435:11434"  # If you has ollama without doccker changed the host port to 11435 to avoid conflict

  ollama-model-loader:
    image: docker:latest  # 🔥 Uses Docker CLI instead of Ollama
    container_name: ollama-model-loader
    depends_on:
      - ollama
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # 🔥 Allows running commands inside containers
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        echo "⏳ Waiting for Ollama to be ready..."
        until docker exec ollama ollama list >/dev/null 2>&1; do
            sleep 10
        done
        echo "📥 Pulling models inside Ollama container..."
        docker exec ollama ollama pull gemma:2b
        docker exec ollama ollama pull deepseek-r1:1.5b
        docker exec ollama ollama pull codegemma:2b
        echo "✅ Models downloaded. Exiting..."
    restart: "no"

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: unless-stopped
    depends_on:
      - ollama
    environment:
      - OLLAMA_BASE_URLS=http://ollama:11434 #comma separated ollama hosts
      - ENV=dev
      - WEBUI_AUTH=False
      - WEBUI_SECRET_KEY=t0p-s3cr3t
    ports:
      - "8080:8080"  # Exposing Open WebUI
    volumes:
      - ./webui-data:/app/data  # Persisting WebUI data
